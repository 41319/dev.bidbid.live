{"version":3,"sources":["webpack:///./src/library/store.js","webpack:///./src/pages/dashboard.js"],"names":["getStoreByRole","storeRoles","limit","searchObject","ascending","role","c","f","v","t","Component","_userContext","React","useContext","UserContext","useState","stores","setStores","useEffect","roleObjects","filter","ro","get","includes","map","id","length","then","href","store","i","key"],"mappings":"4FAAA,4DAGaA,EAAiB,SAACC,EAAiBC,GAC9C,YAD4D,IAA/BD,MAAa,SAAkB,IAAdC,MAAQ,GAC/CC,YAAa,QAAS,CAC3BC,UAAW,YACXC,KAAM,CACJC,EAAG,QACHC,EAAG,cACHC,EAAGP,EACHQ,EAAG,e,kCCVT,oEA0CeC,UArCG,WAChB,IAAMC,EAAeC,IAAMC,WAAWC,KADhB,EAGMC,mBAAS,MAA9BC,EAHe,KAGPC,EAHO,KAiBtB,OAZAC,qBAAU,WACR,IAAMjB,EACHU,GACCA,EAAaQ,YACVC,QAAO,SAACC,GAAD,OAAQA,EAAGC,IAAI,QAAQC,SAAS,aACvCC,KAAI,SAACH,GAAD,OAAQA,EAAGI,OACpB,GACExB,GAAcA,EAAWyB,QAC3B1B,YAAeC,EAAY,GAAG0B,KAAKV,KAEpC,CAACN,IAGF,oCACE,sDACA,2BAAG,kBAAC,IAAD,CAAQiB,KAAK,eAAb,SAAH,4BACA,2BACA,kBAAC,IAAD,CAAQA,KAAK,WAAb,aADA,yCAGCZ,GACCA,EAAOQ,KAAI,SAACK,EAAOC,GAAR,OACT,oCACE,uBAAGC,IAAKD,GACN,kBAAC,IAAD,CAAQF,KAAI,UAAYC,EAAMP,IAAI,eAAlC,UAAmE,IADrE,eAEeO,EAAMP,IAAI,QAFzB","file":"component---src-pages-dashboard-js-b13fec6593065f6a7ccd.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { searchObject } from \"./parse\";\n\nexport const getStoreByRole = (storeRoles = [], limit = 1) => {\n  return searchObject(\"Store\", {\n    ascending: \"createdAt\",\n    role: {\n      c: \"_Role\",\n      f: \"containedIn\",\n      v: storeRoles,\n      t: \"pointer\",\n    },\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Anchor } from \"grommet\";\nimport { getStoreByRole } from \"../library/store\";\nimport UserContext from \"../context/UserContext\";\n\nconst Component = () => {\n  const _userContext = React.useContext(UserContext);\n\n  const [stores, setStores] = useState(null);\n\n  useEffect(() => {\n    const storeRoles =\n      (_userContext &&\n        _userContext.roleObjects\n          .filter((ro) => ro.get(\"name\").includes(\"Store-\"))\n          .map((ro) => ro.id)) ||\n      [];\n    if (storeRoles && storeRoles.length) {\n      getStoreByRole(storeRoles, 1).then(setStores);\n    }\n  }, [_userContext]);\n\n  return (\n    <>\n      <p>Welcome to bidbid.live.</p>\n      <p><Anchor href=\"/setupstore\">Setup</Anchor> a store to get started.</p>\n      <p>\n      <Anchor href=\"/config\">Configure</Anchor> a template to for your social media.\n      </p>\n      {stores &&\n        stores.map((store, i) => (\n          <>\n            <p key={i}>\n              <Anchor href={`/store/${store.get(\"uniqueName\")}`}>Upload</Anchor>{\" \"}\n              products to {store.get(\"name\")} store to start posting to your social platform.\n            </p>\n          </>\n        ))}\n    </>\n  );\n};\n\nexport default Component;\n"],"sourceRoot":""}